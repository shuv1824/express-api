version: '3.8'

services:
  # Express API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-api
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-5000}
      - MONGODB_URI=mongodb://mongodb:27017/express-api
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-604800}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:5000}
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Service
  mongodb:
    image: mongo:7-jammy
    container_name: express-api-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=express-api
      # Uncomment below for production with authentication
      # - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
